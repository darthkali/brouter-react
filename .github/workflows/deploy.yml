name: Build and Deploy to Docker Hub

on:
  push:
    branches: [ master ]

env:
  DOCKER_IMAGE: brouter-react

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Run tests
      run: npm test -- --coverage --passWithNoTests
      
    - name: Semantic Release
      id: semantic-release
      uses: cycjimmy/semantic-release-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      with:
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git
          
    - name: Get package version
      id: package-version
      if: steps.semantic-release.outputs.new_release_published == 'true'
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Set up Docker Buildx
      if: steps.semantic-release.outputs.new_release_published == 'true'
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      if: steps.semantic-release.outputs.new_release_published == 'true'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Build and push Docker image
      if: steps.semantic-release.outputs.new_release_published == 'true'
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:v${{ steps.package-version.outputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max